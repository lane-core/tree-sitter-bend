================================================================================
Bitwise XOR operator
================================================================================

a ^ b

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (name
      (identifier))
    (name
      (identifier))))

================================================================================
Bitwise XOR word operator  
================================================================================

a xor b

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (name
      (identifier))
    (name
      (identifier))))

================================================================================
Bitwise AND operator
================================================================================

a and b

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (name
      (identifier))
    (name
      (identifier))))

================================================================================
Bitwise OR operator
================================================================================

a or b

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (name
      (identifier))
    (name
      (identifier))))

================================================================================
Shift left operator
================================================================================

x << 2

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (name
      (identifier))
    (literal
      (integer_literal))))

================================================================================
Shift right operator
================================================================================

y >> 3

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (name
      (identifier))
    (literal
      (integer_literal))))

================================================================================
Strict equality operator
================================================================================

x === y

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (name
      (identifier))
    (name
      (identifier))))

================================================================================
Strict inequality operator
================================================================================

x !== y

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (name
      (identifier))
    (name
      (identifier))))

================================================================================
Power operator
================================================================================

x ** 2

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (name
      (identifier))
    (literal
      (integer_literal))))

================================================================================
Unary not operator
================================================================================

not x

--------------------------------------------------------------------------------

(source_file
  (unary_expression
    (name
      (identifier))))

================================================================================
Unary not with parenthesized expression
================================================================================

not (x and y)

--------------------------------------------------------------------------------

(source_file
  (unary_expression
    (parenthesized_expression
      (binary_expression
        (name
          (identifier))
        (name
          (identifier))))))

================================================================================
Logical operators (&&, ||)
================================================================================

x && y || z

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (binary_expression
      (name
        (identifier))
      (name
        (identifier)))
    (name
      (identifier))))