================================================================================
Hierarchical function names
================================================================================

def List/map<A, B>(xs: A[], f: A -> B) -> B[]:
  match xs:
    case []:
      []
    case x <> xs:
      f(x) <> List/map<A, B>(xs, f)

--------------------------------------------------------------------------------

(source_file
  (function_definition
    name: (name
      (hierarchical_name
        namespace_component: (identifier)
        function_name: (identifier)))
    (type_parameters
      (type_parameter
        (identifier))
      (type_parameter
        (identifier)))
    parameters: (parameters
      (parameter
        (identifier)
        (list_type
          (name
            (identifier))))
      (parameter
        (identifier)
        (function_type
          (name
            (identifier))
          (name
            (identifier)))))
    return_type: (list_type
      (name
        (identifier)))
    body: (match_expression
      (name
        (identifier))
      (match_case
        (pattern
          (list_pattern))
        (empty_list))
      (match_case
        (pattern
          (list_pattern
            (pattern
              (identifier))
            (pattern
              (identifier))))
        (binary_expression
          (application_expression
            function: (name
              (identifier))
            (name
              (identifier)))
          (application_expression
            function: (name
              (hierarchical_name
                namespace_component: (identifier)
                function_name: (identifier)))
            (name
              (identifier))
            (name
              (identifier))
            (name
              (identifier))
            (name
              (identifier))))))))

================================================================================
Hierarchical name in application
================================================================================

Nat/add(x, y)

--------------------------------------------------------------------------------

(source_file
  (binary_expression
    (natural_type)
    (application_expression
      function: (name
        (identifier))
      (name
        (identifier))
      (name
        (identifier)))))

================================================================================
Hierarchical name as type
================================================================================

def f(x: Data/Vec(Nat, 3)) -> Data/Matrix(2, 3):
  x

--------------------------------------------------------------------------------

(source_file
  (function_definition
    name: (name
      (identifier))
    parameters: (parameters
      (parameter
        (identifier)
        (type_application
          (name
            (hierarchical_name
              namespace_component: (identifier)
              function_name: (identifier)))
          (natural_type)
          (ERROR
            (integer_literal)))))
    return_type: (type_application
      (name
        (hierarchical_name
          namespace_component: (identifier)
          function_name: (identifier)))
      (ERROR
        (integer_literal)
        (integer_literal)))
    body: (name
      (identifier))))