================================================================================
Required semicolon in assignment expression
================================================================================

x = 42; x + 1

--------------------------------------------------------------------------------

(source_file
  (let_expression
    (identifier)
    (literal
      (integer_literal))
    (binary_expression
      (name
        (identifier))
      (literal
        (integer_literal)))))

================================================================================
Required semicolon in eliminator cases
================================================================================

λ{False: f; True: t}

--------------------------------------------------------------------------------

(source_file
  (lambda_expression
    (lambda_match_case
      (bool_match
        (name
          (identifier))
        (name
          (identifier))))))

================================================================================
Optional semicolon in brace-form match
================================================================================

match x { case @A: body; case @B: body }

--------------------------------------------------------------------------------

(source_file
  (ERROR
    (implicit_application
      (name
        (identifier))
      (application_expression
        (application_expression
          (application_expression
            (application_expression
              (name
                (identifier))
              (constructor_tag
                (identifier)))
            (ERROR)
            (name
              (identifier)))
          (ERROR)
          (constructor_tag
            (identifier)))
        (ERROR)
        (name
          (identifier))))))

================================================================================
No semicolon in colon-form match
================================================================================

match x:
  case @A: body
  case @B: body

--------------------------------------------------------------------------------

(source_file
  (match_expression
    (name
      (identifier))
    (match_case
      (pattern
        (constructor_tag
          (identifier)))
      (name
        (identifier)))
    (match_case
      (pattern
        (constructor_tag
          (identifier)))
      (name
        (identifier)))))

================================================================================
Optional final semicolon in eliminator
================================================================================

λ{False: f; True: t}

--------------------------------------------------------------------------------

(source_file
  (lambda_expression
    (lambda_match_case
      (bool_match
        (name
          (identifier))
        (name
          (identifier))))))

================================================================================
Multiple assignments with semicolons
================================================================================

x = 1; y = 2; x + y

--------------------------------------------------------------------------------

(source_file
  (let_expression
    (identifier)
    (literal
      (integer_literal))
    (let_expression
      (identifier)
      (literal
        (integer_literal))
      (binary_expression
        (name
          (identifier))
        (name
          (identifier))))))
