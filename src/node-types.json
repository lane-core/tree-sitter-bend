[
  {
    "type": "absurd_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "application_expression",
    "named": true,
    "fields": {
      "argument": {
        "multiple": false,
        "required": false,
        "types": [
          {
            "type": "absurd_expression",
            "named": true
          },
          {
            "type": "application_expression",
            "named": true
          },
          {
            "type": "binary_expression",
            "named": true
          },
          {
            "type": "boolean_type",
            "named": true
          },
          {
            "type": "constructor_application",
            "named": true
          },
          {
            "type": "constructor_tag",
            "named": true
          },
          {
            "type": "empty_list",
            "named": true
          },
          {
            "type": "empty_type",
            "named": true
          },
          {
            "type": "enum_literal",
            "named": true
          },
          {
            "type": "enum_symbol",
            "named": true
          },
          {
            "type": "enum_type",
            "named": true
          },
          {
            "type": "equality_type",
            "named": true
          },
          {
            "type": "era_expression",
            "named": true
          },
          {
            "type": "fix_expression",
            "named": true
          },
          {
            "type": "fork_expression",
            "named": true
          },
          {
            "type": "function_type",
            "named": true
          },
          {
            "type": "identifier",
            "named": true
          },
          {
            "type": "if_expression",
            "named": true
          },
          {
            "type": "implicit_application",
            "named": true
          },
          {
            "type": "lambda_expression",
            "named": true
          },
          {
            "type": "lambda_match",
            "named": true
          },
          {
            "type": "let_expression",
            "named": true
          },
          {
            "type": "list_literal",
            "named": true
          },
          {
            "type": "list_type",
            "named": true
          },
          {
            "type": "literal",
            "named": true
          },
          {
            "type": "log_expression",
            "named": true
          },
          {
            "type": "match_expression",
            "named": true
          },
          {
            "type": "metavar",
            "named": true
          },
          {
            "type": "natural_type",
            "named": true
          },
          {
            "type": "numeric_type",
            "named": true
          },
          {
            "type": "parenthesized_expression",
            "named": true
          },
          {
            "type": "parenthesized_type",
            "named": true
          },
          {
            "type": "primitive_function",
            "named": true
          },
          {
            "type": "reference",
            "named": true
          },
          {
            "type": "reflexivity_proof",
            "named": true
          },
          {
            "type": "return_expression",
            "named": true
          },
          {
            "type": "rewrite_expression",
            "named": true
          },
          {
            "type": "self_type",
            "named": true
          },
          {
            "type": "sigma_simple",
            "named": true
          },
          {
            "type": "sigma_type",
            "named": true
          },
          {
            "type": "substitution",
            "named": true
          },
          {
            "type": "superposition",
            "named": true
          },
          {
            "type": "tilde_expression",
            "named": true
          },
          {
            "type": "tilde_match",
            "named": true
          },
          {
            "type": "trust_expression",
            "named": true
          },
          {
            "type": "tuple_expression",
            "named": true
          },
          {
            "type": "type_application",
            "named": true
          },
          {
            "type": "type_check",
            "named": true
          },
          {
            "type": "type_universe",
            "named": true
          },
          {
            "type": "unary_expression",
            "named": true
          },
          {
            "type": "unit_literal",
            "named": true
          },
          {
            "type": "unit_type",
            "named": true
          },
          {
            "type": "use_expression",
            "named": true
          },
          {
            "type": "view_expression",
            "named": true
          }
        ]
      },
      "function": {
        "multiple": false,
        "required": false,
        "types": [
          {
            "type": "absurd_expression",
            "named": true
          },
          {
            "type": "application_expression",
            "named": true
          },
          {
            "type": "binary_expression",
            "named": true
          },
          {
            "type": "boolean_type",
            "named": true
          },
          {
            "type": "constructor_application",
            "named": true
          },
          {
            "type": "constructor_tag",
            "named": true
          },
          {
            "type": "empty_list",
            "named": true
          },
          {
            "type": "empty_type",
            "named": true
          },
          {
            "type": "enum_literal",
            "named": true
          },
          {
            "type": "enum_symbol",
            "named": true
          },
          {
            "type": "enum_type",
            "named": true
          },
          {
            "type": "equality_type",
            "named": true
          },
          {
            "type": "era_expression",
            "named": true
          },
          {
            "type": "fix_expression",
            "named": true
          },
          {
            "type": "fork_expression",
            "named": true
          },
          {
            "type": "function_type",
            "named": true
          },
          {
            "type": "identifier",
            "named": true
          },
          {
            "type": "if_expression",
            "named": true
          },
          {
            "type": "implicit_application",
            "named": true
          },
          {
            "type": "lambda_expression",
            "named": true
          },
          {
            "type": "lambda_match",
            "named": true
          },
          {
            "type": "let_expression",
            "named": true
          },
          {
            "type": "list_literal",
            "named": true
          },
          {
            "type": "list_type",
            "named": true
          },
          {
            "type": "literal",
            "named": true
          },
          {
            "type": "log_expression",
            "named": true
          },
          {
            "type": "match_expression",
            "named": true
          },
          {
            "type": "metavar",
            "named": true
          },
          {
            "type": "natural_type",
            "named": true
          },
          {
            "type": "numeric_type",
            "named": true
          },
          {
            "type": "parenthesized_expression",
            "named": true
          },
          {
            "type": "parenthesized_type",
            "named": true
          },
          {
            "type": "primitive_function",
            "named": true
          },
          {
            "type": "reference",
            "named": true
          },
          {
            "type": "reflexivity_proof",
            "named": true
          },
          {
            "type": "return_expression",
            "named": true
          },
          {
            "type": "rewrite_expression",
            "named": true
          },
          {
            "type": "self_type",
            "named": true
          },
          {
            "type": "sigma_simple",
            "named": true
          },
          {
            "type": "sigma_type",
            "named": true
          },
          {
            "type": "substitution",
            "named": true
          },
          {
            "type": "superposition",
            "named": true
          },
          {
            "type": "tilde_expression",
            "named": true
          },
          {
            "type": "tilde_match",
            "named": true
          },
          {
            "type": "trust_expression",
            "named": true
          },
          {
            "type": "tuple_expression",
            "named": true
          },
          {
            "type": "type_application",
            "named": true
          },
          {
            "type": "type_check",
            "named": true
          },
          {
            "type": "type_universe",
            "named": true
          },
          {
            "type": "unary_expression",
            "named": true
          },
          {
            "type": "unit_literal",
            "named": true
          },
          {
            "type": "unit_type",
            "named": true
          },
          {
            "type": "use_expression",
            "named": true
          },
          {
            "type": "view_expression",
            "named": true
          }
        ]
      }
    },
    "children": {
      "multiple": true,
      "required": false,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "arithmetic_pattern",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "nat_literal",
          "named": true
        },
        {
          "type": "pattern",
          "named": true
        }
      ]
    }
  },
  {
    "type": "as_pattern",
    "named": true,
    "fields": {
      "name": {
        "multiple": false,
        "required": true,
        "types": [
          {
            "type": "identifier",
            "named": true
          }
        ]
      },
      "pattern": {
        "multiple": false,
        "required": true,
        "types": [
          {
            "type": "pattern",
            "named": true
          }
        ]
      }
    }
  },
  {
    "type": "assertion",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "binary_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "bool_match",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "boolean_literal",
    "named": true,
    "fields": {}
  },
  {
    "type": "constructor_application",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "constructor_case",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "field_declaration",
          "named": true
        }
      ]
    }
  },
  {
    "type": "constructor_tag",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "identifier",
          "named": true
        }
      ]
    }
  },
  {
    "type": "empty_list",
    "named": true,
    "fields": {}
  },
  {
    "type": "enum_literal",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": false,
      "types": [
        {
          "type": "enum_symbol",
          "named": true
        }
      ]
    }
  },
  {
    "type": "enum_match",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "enum_symbol",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "identifier",
          "named": true
        }
      ]
    }
  },
  {
    "type": "enum_type",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "enum_symbol",
          "named": true
        }
      ]
    }
  },
  {
    "type": "equality_match",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "equality_type",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "era_expression",
    "named": true,
    "fields": {}
  },
  {
    "type": "field_declaration",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        }
      ]
    }
  },
  {
    "type": "fix_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "fork_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "function_definition",
    "named": true,
    "fields": {
      "body": {
        "multiple": false,
        "required": false,
        "types": [
          {
            "type": "absurd_expression",
            "named": true
          },
          {
            "type": "application_expression",
            "named": true
          },
          {
            "type": "binary_expression",
            "named": true
          },
          {
            "type": "boolean_type",
            "named": true
          },
          {
            "type": "constructor_application",
            "named": true
          },
          {
            "type": "constructor_tag",
            "named": true
          },
          {
            "type": "empty_list",
            "named": true
          },
          {
            "type": "empty_type",
            "named": true
          },
          {
            "type": "enum_literal",
            "named": true
          },
          {
            "type": "enum_symbol",
            "named": true
          },
          {
            "type": "enum_type",
            "named": true
          },
          {
            "type": "equality_type",
            "named": true
          },
          {
            "type": "era_expression",
            "named": true
          },
          {
            "type": "fix_expression",
            "named": true
          },
          {
            "type": "fork_expression",
            "named": true
          },
          {
            "type": "function_type",
            "named": true
          },
          {
            "type": "identifier",
            "named": true
          },
          {
            "type": "if_expression",
            "named": true
          },
          {
            "type": "implicit_application",
            "named": true
          },
          {
            "type": "lambda_expression",
            "named": true
          },
          {
            "type": "lambda_match",
            "named": true
          },
          {
            "type": "let_expression",
            "named": true
          },
          {
            "type": "list_literal",
            "named": true
          },
          {
            "type": "list_type",
            "named": true
          },
          {
            "type": "literal",
            "named": true
          },
          {
            "type": "log_expression",
            "named": true
          },
          {
            "type": "match_expression",
            "named": true
          },
          {
            "type": "metavar",
            "named": true
          },
          {
            "type": "natural_type",
            "named": true
          },
          {
            "type": "numeric_type",
            "named": true
          },
          {
            "type": "parenthesized_expression",
            "named": true
          },
          {
            "type": "parenthesized_type",
            "named": true
          },
          {
            "type": "primitive_function",
            "named": true
          },
          {
            "type": "reference",
            "named": true
          },
          {
            "type": "reflexivity_proof",
            "named": true
          },
          {
            "type": "return_expression",
            "named": true
          },
          {
            "type": "rewrite_expression",
            "named": true
          },
          {
            "type": "self_type",
            "named": true
          },
          {
            "type": "sigma_simple",
            "named": true
          },
          {
            "type": "sigma_type",
            "named": true
          },
          {
            "type": "substitution",
            "named": true
          },
          {
            "type": "superposition",
            "named": true
          },
          {
            "type": "tilde_expression",
            "named": true
          },
          {
            "type": "tilde_match",
            "named": true
          },
          {
            "type": "trust_expression",
            "named": true
          },
          {
            "type": "tuple_expression",
            "named": true
          },
          {
            "type": "type_application",
            "named": true
          },
          {
            "type": "type_check",
            "named": true
          },
          {
            "type": "type_universe",
            "named": true
          },
          {
            "type": "unary_expression",
            "named": true
          },
          {
            "type": "unit_literal",
            "named": true
          },
          {
            "type": "unit_type",
            "named": true
          },
          {
            "type": "use_expression",
            "named": true
          },
          {
            "type": "view_expression",
            "named": true
          }
        ]
      },
      "name": {
        "multiple": false,
        "required": true,
        "types": [
          {
            "type": "identifier",
            "named": true
          }
        ]
      },
      "parameters": {
        "multiple": false,
        "required": false,
        "types": [
          {
            "type": "parameters",
            "named": true
          }
        ]
      },
      "return_type": {
        "multiple": false,
        "required": false,
        "types": [
          {
            "type": "boolean_type",
            "named": true
          },
          {
            "type": "empty_type",
            "named": true
          },
          {
            "type": "enum_type",
            "named": true
          },
          {
            "type": "equality_type",
            "named": true
          },
          {
            "type": "function_type",
            "named": true
          },
          {
            "type": "identifier",
            "named": true
          },
          {
            "type": "list_type",
            "named": true
          },
          {
            "type": "metavar",
            "named": true
          },
          {
            "type": "natural_type",
            "named": true
          },
          {
            "type": "numeric_type",
            "named": true
          },
          {
            "type": "parenthesized_type",
            "named": true
          },
          {
            "type": "self_type",
            "named": true
          },
          {
            "type": "sigma_simple",
            "named": true
          },
          {
            "type": "sigma_type",
            "named": true
          },
          {
            "type": "type_application",
            "named": true
          },
          {
            "type": "type_universe",
            "named": true
          },
          {
            "type": "unit_type",
            "named": true
          }
        ]
      },
      "type": {
        "multiple": false,
        "required": false,
        "types": [
          {
            "type": "boolean_type",
            "named": true
          },
          {
            "type": "empty_type",
            "named": true
          },
          {
            "type": "enum_type",
            "named": true
          },
          {
            "type": "equality_type",
            "named": true
          },
          {
            "type": "function_type",
            "named": true
          },
          {
            "type": "identifier",
            "named": true
          },
          {
            "type": "list_type",
            "named": true
          },
          {
            "type": "metavar",
            "named": true
          },
          {
            "type": "natural_type",
            "named": true
          },
          {
            "type": "numeric_type",
            "named": true
          },
          {
            "type": "parenthesized_type",
            "named": true
          },
          {
            "type": "self_type",
            "named": true
          },
          {
            "type": "sigma_simple",
            "named": true
          },
          {
            "type": "sigma_type",
            "named": true
          },
          {
            "type": "type_application",
            "named": true
          },
          {
            "type": "type_universe",
            "named": true
          },
          {
            "type": "unit_type",
            "named": true
          }
        ]
      },
      "value": {
        "multiple": false,
        "required": false,
        "types": [
          {
            "type": "absurd_expression",
            "named": true
          },
          {
            "type": "application_expression",
            "named": true
          },
          {
            "type": "binary_expression",
            "named": true
          },
          {
            "type": "boolean_type",
            "named": true
          },
          {
            "type": "constructor_application",
            "named": true
          },
          {
            "type": "constructor_tag",
            "named": true
          },
          {
            "type": "empty_list",
            "named": true
          },
          {
            "type": "empty_type",
            "named": true
          },
          {
            "type": "enum_literal",
            "named": true
          },
          {
            "type": "enum_symbol",
            "named": true
          },
          {
            "type": "enum_type",
            "named": true
          },
          {
            "type": "equality_type",
            "named": true
          },
          {
            "type": "era_expression",
            "named": true
          },
          {
            "type": "fix_expression",
            "named": true
          },
          {
            "type": "fork_expression",
            "named": true
          },
          {
            "type": "function_type",
            "named": true
          },
          {
            "type": "identifier",
            "named": true
          },
          {
            "type": "if_expression",
            "named": true
          },
          {
            "type": "implicit_application",
            "named": true
          },
          {
            "type": "lambda_expression",
            "named": true
          },
          {
            "type": "lambda_match",
            "named": true
          },
          {
            "type": "let_expression",
            "named": true
          },
          {
            "type": "list_literal",
            "named": true
          },
          {
            "type": "list_type",
            "named": true
          },
          {
            "type": "literal",
            "named": true
          },
          {
            "type": "log_expression",
            "named": true
          },
          {
            "type": "match_expression",
            "named": true
          },
          {
            "type": "metavar",
            "named": true
          },
          {
            "type": "natural_type",
            "named": true
          },
          {
            "type": "numeric_type",
            "named": true
          },
          {
            "type": "parenthesized_expression",
            "named": true
          },
          {
            "type": "parenthesized_type",
            "named": true
          },
          {
            "type": "primitive_function",
            "named": true
          },
          {
            "type": "reference",
            "named": true
          },
          {
            "type": "reflexivity_proof",
            "named": true
          },
          {
            "type": "return_expression",
            "named": true
          },
          {
            "type": "rewrite_expression",
            "named": true
          },
          {
            "type": "self_type",
            "named": true
          },
          {
            "type": "sigma_simple",
            "named": true
          },
          {
            "type": "sigma_type",
            "named": true
          },
          {
            "type": "substitution",
            "named": true
          },
          {
            "type": "superposition",
            "named": true
          },
          {
            "type": "tilde_expression",
            "named": true
          },
          {
            "type": "tilde_match",
            "named": true
          },
          {
            "type": "trust_expression",
            "named": true
          },
          {
            "type": "tuple_expression",
            "named": true
          },
          {
            "type": "type_application",
            "named": true
          },
          {
            "type": "type_check",
            "named": true
          },
          {
            "type": "type_universe",
            "named": true
          },
          {
            "type": "unary_expression",
            "named": true
          },
          {
            "type": "unit_literal",
            "named": true
          },
          {
            "type": "unit_type",
            "named": true
          },
          {
            "type": "use_expression",
            "named": true
          },
          {
            "type": "view_expression",
            "named": true
          }
        ]
      }
    },
    "children": {
      "multiple": false,
      "required": false,
      "types": [
        {
          "type": "type_parameters",
          "named": true
        }
      ]
    }
  },
  {
    "type": "function_type",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        }
      ]
    }
  },
  {
    "type": "identifier",
    "named": true,
    "fields": {}
  },
  {
    "type": "if_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "implicit_application",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "import_declaration",
    "named": true,
    "fields": {
      "alias": {
        "multiple": false,
        "required": true,
        "types": [
          {
            "type": "identifier",
            "named": true
          }
        ]
      },
      "module_path": {
        "multiple": false,
        "required": true,
        "types": [
          {
            "type": "module_path",
            "named": true
          }
        ]
      }
    }
  },
  {
    "type": "lambda_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": false,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "lambda_match_case",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "pattern",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "lambda_match",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": false,
      "types": [
        {
          "type": "bool_match",
          "named": true
        },
        {
          "type": "enum_match",
          "named": true
        },
        {
          "type": "equality_match",
          "named": true
        },
        {
          "type": "list_match",
          "named": true
        },
        {
          "type": "nat_match",
          "named": true
        },
        {
          "type": "pair_match",
          "named": true
        },
        {
          "type": "sup_match",
          "named": true
        },
        {
          "type": "unit_match",
          "named": true
        }
      ]
    }
  },
  {
    "type": "lambda_match_case",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "bool_match",
          "named": true
        },
        {
          "type": "enum_match",
          "named": true
        },
        {
          "type": "equality_match",
          "named": true
        },
        {
          "type": "list_match",
          "named": true
        },
        {
          "type": "nat_match",
          "named": true
        },
        {
          "type": "pair_match",
          "named": true
        },
        {
          "type": "sup_match",
          "named": true
        },
        {
          "type": "unit_match",
          "named": true
        }
      ]
    }
  },
  {
    "type": "let_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "list_literal",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": false,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "list_match",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "list_pattern",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": false,
      "types": [
        {
          "type": "pattern",
          "named": true
        }
      ]
    }
  },
  {
    "type": "list_type",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        }
      ]
    }
  },
  {
    "type": "literal",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "boolean_literal",
          "named": true
        },
        {
          "type": "character_literal",
          "named": true
        },
        {
          "type": "float_literal",
          "named": true
        },
        {
          "type": "integer_literal",
          "named": true
        },
        {
          "type": "nat_literal",
          "named": true
        },
        {
          "type": "string_literal",
          "named": true
        }
      ]
    }
  },
  {
    "type": "log_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "match_case",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "pattern",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "match_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_case",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        },
        {
          "type": "with_clause",
          "named": true
        }
      ]
    }
  },
  {
    "type": "metavar",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "module_path",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "identifier",
          "named": true
        }
      ]
    }
  },
  {
    "type": "nat_match",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "numeric_type",
    "named": true,
    "fields": {}
  },
  {
    "type": "pair_match",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "parameter",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        }
      ]
    }
  },
  {
    "type": "parameters",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": false,
      "types": [
        {
          "type": "parameter",
          "named": true
        }
      ]
    }
  },
  {
    "type": "parenthesized_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "parenthesized_pattern",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "pattern",
          "named": true
        }
      ]
    }
  },
  {
    "type": "parenthesized_type",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        }
      ]
    }
  },
  {
    "type": "pattern",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "arithmetic_pattern",
          "named": true
        },
        {
          "type": "as_pattern",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "list_pattern",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "parenthesized_pattern",
          "named": true
        },
        {
          "type": "tuple_pattern",
          "named": true
        },
        {
          "type": "type_annotated_pattern",
          "named": true
        }
      ]
    }
  },
  {
    "type": "primitive_function",
    "named": true,
    "fields": {}
  },
  {
    "type": "reference",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "identifier",
          "named": true
        }
      ]
    }
  },
  {
    "type": "reflexivity_proof",
    "named": true,
    "fields": {}
  },
  {
    "type": "return_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "rewrite_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "sigma_simple",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        }
      ]
    }
  },
  {
    "type": "sigma_type",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        }
      ]
    }
  },
  {
    "type": "source_file",
    "named": true,
    "root": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": false,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "assertion",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_definition",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "import_declaration",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "try_statement",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_definition",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "substitution",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "sup_match",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "superposition",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "tilde_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "tilde_match",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "bool_match",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_match",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_match",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "nat_match",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "pair_match",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "sup_match",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_match",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "trust_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "try_statement",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "tuple_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "tuple_pattern",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "pattern",
          "named": true
        }
      ]
    }
  },
  {
    "type": "type_annotated_pattern",
    "named": true,
    "fields": {
      "pattern": {
        "multiple": false,
        "required": true,
        "types": [
          {
            "type": "pattern",
            "named": true
          }
        ]
      },
      "type": {
        "multiple": false,
        "required": true,
        "types": [
          {
            "type": "boolean_type",
            "named": true
          },
          {
            "type": "empty_type",
            "named": true
          },
          {
            "type": "enum_type",
            "named": true
          },
          {
            "type": "equality_type",
            "named": true
          },
          {
            "type": "function_type",
            "named": true
          },
          {
            "type": "identifier",
            "named": true
          },
          {
            "type": "list_type",
            "named": true
          },
          {
            "type": "metavar",
            "named": true
          },
          {
            "type": "natural_type",
            "named": true
          },
          {
            "type": "numeric_type",
            "named": true
          },
          {
            "type": "parenthesized_type",
            "named": true
          },
          {
            "type": "self_type",
            "named": true
          },
          {
            "type": "sigma_simple",
            "named": true
          },
          {
            "type": "sigma_type",
            "named": true
          },
          {
            "type": "type_application",
            "named": true
          },
          {
            "type": "type_universe",
            "named": true
          },
          {
            "type": "unit_type",
            "named": true
          }
        ]
      }
    }
  },
  {
    "type": "type_application",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        }
      ]
    }
  },
  {
    "type": "type_check",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "type_definition",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "constructor_case",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "parameters",
          "named": true
        },
        {
          "type": "type_parameters",
          "named": true
        }
      ]
    }
  },
  {
    "type": "type_parameter",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        }
      ]
    }
  },
  {
    "type": "type_parameters",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "type_parameter",
          "named": true
        }
      ]
    }
  },
  {
    "type": "unary_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "unit_literal",
    "named": true,
    "fields": {}
  },
  {
    "type": "unit_match",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "use_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "view_expression",
    "named": true,
    "fields": {},
    "children": {
      "multiple": false,
      "required": true,
      "types": [
        {
          "type": "identifier",
          "named": true
        }
      ]
    }
  },
  {
    "type": "with_clause",
    "named": true,
    "fields": {},
    "children": {
      "multiple": true,
      "required": true,
      "types": [
        {
          "type": "absurd_expression",
          "named": true
        },
        {
          "type": "application_expression",
          "named": true
        },
        {
          "type": "binary_expression",
          "named": true
        },
        {
          "type": "boolean_type",
          "named": true
        },
        {
          "type": "constructor_application",
          "named": true
        },
        {
          "type": "constructor_tag",
          "named": true
        },
        {
          "type": "empty_list",
          "named": true
        },
        {
          "type": "empty_type",
          "named": true
        },
        {
          "type": "enum_literal",
          "named": true
        },
        {
          "type": "enum_symbol",
          "named": true
        },
        {
          "type": "enum_type",
          "named": true
        },
        {
          "type": "equality_type",
          "named": true
        },
        {
          "type": "era_expression",
          "named": true
        },
        {
          "type": "fix_expression",
          "named": true
        },
        {
          "type": "fork_expression",
          "named": true
        },
        {
          "type": "function_type",
          "named": true
        },
        {
          "type": "identifier",
          "named": true
        },
        {
          "type": "if_expression",
          "named": true
        },
        {
          "type": "implicit_application",
          "named": true
        },
        {
          "type": "lambda_expression",
          "named": true
        },
        {
          "type": "lambda_match",
          "named": true
        },
        {
          "type": "let_expression",
          "named": true
        },
        {
          "type": "list_literal",
          "named": true
        },
        {
          "type": "list_type",
          "named": true
        },
        {
          "type": "literal",
          "named": true
        },
        {
          "type": "log_expression",
          "named": true
        },
        {
          "type": "match_expression",
          "named": true
        },
        {
          "type": "metavar",
          "named": true
        },
        {
          "type": "natural_type",
          "named": true
        },
        {
          "type": "numeric_type",
          "named": true
        },
        {
          "type": "parenthesized_expression",
          "named": true
        },
        {
          "type": "parenthesized_type",
          "named": true
        },
        {
          "type": "primitive_function",
          "named": true
        },
        {
          "type": "reference",
          "named": true
        },
        {
          "type": "reflexivity_proof",
          "named": true
        },
        {
          "type": "return_expression",
          "named": true
        },
        {
          "type": "rewrite_expression",
          "named": true
        },
        {
          "type": "self_type",
          "named": true
        },
        {
          "type": "sigma_simple",
          "named": true
        },
        {
          "type": "sigma_type",
          "named": true
        },
        {
          "type": "substitution",
          "named": true
        },
        {
          "type": "superposition",
          "named": true
        },
        {
          "type": "tilde_expression",
          "named": true
        },
        {
          "type": "tilde_match",
          "named": true
        },
        {
          "type": "trust_expression",
          "named": true
        },
        {
          "type": "tuple_expression",
          "named": true
        },
        {
          "type": "type_application",
          "named": true
        },
        {
          "type": "type_check",
          "named": true
        },
        {
          "type": "type_universe",
          "named": true
        },
        {
          "type": "unary_expression",
          "named": true
        },
        {
          "type": "unit_literal",
          "named": true
        },
        {
          "type": "unit_type",
          "named": true
        },
        {
          "type": "use_expression",
          "named": true
        },
        {
          "type": "view_expression",
          "named": true
        }
      ]
    }
  },
  {
    "type": "!=",
    "named": false
  },
  {
    "type": "!==",
    "named": false
  },
  {
    "type": "%",
    "named": false
  },
  {
    "type": "&",
    "named": false
  },
  {
    "type": "&&",
    "named": false
  },
  {
    "type": "(",
    "named": false
  },
  {
    "type": "()",
    "named": false
  },
  {
    "type": "(,)",
    "named": false
  },
  {
    "type": ")",
    "named": false
  },
  {
    "type": "*",
    "named": false
  },
  {
    "type": "**",
    "named": false
  },
  {
    "type": "+",
    "named": false
  },
  {
    "type": ",",
    "named": false
  },
  {
    "type": "-",
    "named": false
  },
  {
    "type": "->",
    "named": false
  },
  {
    "type": ".",
    "named": false
  },
  {
    "type": "/",
    "named": false
  },
  {
    "type": "0n",
    "named": false
  },
  {
    "type": "1n+",
    "named": false
  },
  {
    "type": ":",
    "named": false
  },
  {
    "type": "::",
    "named": false
  },
  {
    "type": ";",
    "named": false
  },
  {
    "type": "<",
    "named": false
  },
  {
    "type": "<<",
    "named": false
  },
  {
    "type": "<=",
    "named": false
  },
  {
    "type": "<>",
    "named": false
  },
  {
    "type": "=",
    "named": false
  },
  {
    "type": "==",
    "named": false
  },
  {
    "type": "===",
    "named": false
  },
  {
    "type": ">",
    "named": false
  },
  {
    "type": ">=",
    "named": false
  },
  {
    "type": ">>",
    "named": false
  },
  {
    "type": "?",
    "named": false
  },
  {
    "type": "@",
    "named": false
  },
  {
    "type": "CHAR_TO_U64",
    "named": false
  },
  {
    "type": "Char",
    "named": false
  },
  {
    "type": "F64",
    "named": false
  },
  {
    "type": "False",
    "named": false
  },
  {
    "type": "HVM_DEC",
    "named": false
  },
  {
    "type": "HVM_INC",
    "named": false
  },
  {
    "type": "I64",
    "named": false
  },
  {
    "type": "True",
    "named": false
  },
  {
    "type": "U64",
    "named": false
  },
  {
    "type": "U64_TO_CHAR",
    "named": false
  },
  {
    "type": "[",
    "named": false
  },
  {
    "type": "[]",
    "named": false
  },
  {
    "type": "]",
    "named": false
  },
  {
    "type": "^",
    "named": false
  },
  {
    "type": "absurd",
    "named": false
  },
  {
    "type": "all",
    "named": false
  },
  {
    "type": "and",
    "named": false
  },
  {
    "type": "any",
    "named": false
  },
  {
    "type": "as",
    "named": false
  },
  {
    "type": "assert",
    "named": false
  },
  {
    "type": "block_comment",
    "named": true,
    "extra": true
  },
  {
    "type": "boolean_type",
    "named": true
  },
  {
    "type": "case",
    "named": false
  },
  {
    "type": "character_literal",
    "named": true
  },
  {
    "type": "def",
    "named": false
  },
  {
    "type": "elif",
    "named": false
  },
  {
    "type": "else",
    "named": false
  },
  {
    "type": "empty_type",
    "named": true
  },
  {
    "type": "enum",
    "named": false
  },
  {
    "type": "finally",
    "named": false
  },
  {
    "type": "float_literal",
    "named": true
  },
  {
    "type": "fork",
    "named": false
  },
  {
    "type": "if",
    "named": false
  },
  {
    "type": "import",
    "named": false
  },
  {
    "type": "integer_literal",
    "named": true
  },
  {
    "type": "lambda",
    "named": false
  },
  {
    "type": "line_comment",
    "named": true,
    "extra": true
  },
  {
    "type": "log",
    "named": false
  },
  {
    "type": "match",
    "named": false
  },
  {
    "type": "mu",
    "named": false
  },
  {
    "type": "nat_literal",
    "named": true
  },
  {
    "type": "natural_type",
    "named": true
  },
  {
    "type": "not",
    "named": false
  },
  {
    "type": "or",
    "named": false
  },
  {
    "type": "ref",
    "named": false
  },
  {
    "type": "return",
    "named": false
  },
  {
    "type": "rewrite",
    "named": false
  },
  {
    "type": "self_type",
    "named": true
  },
  {
    "type": "string_literal",
    "named": true
  },
  {
    "type": "sub",
    "named": false
  },
  {
    "type": "trust",
    "named": false
  },
  {
    "type": "try",
    "named": false
  },
  {
    "type": "type",
    "named": false
  },
  {
    "type": "type_universe",
    "named": true
  },
  {
    "type": "unit_type",
    "named": true
  },
  {
    "type": "use",
    "named": false
  },
  {
    "type": "view",
    "named": false
  },
  {
    "type": "with",
    "named": false
  },
  {
    "type": "xor",
    "named": false
  },
  {
    "type": "{",
    "named": false
  },
  {
    "type": "{==}",
    "named": false
  },
  {
    "type": "||",
    "named": false
  },
  {
    "type": "}",
    "named": false
  },
  {
    "type": "~",
    "named": false
  },
  {
    "type": "Σ",
    "named": false
  },
  {
    "type": "λ",
    "named": false
  },
  {
    "type": "μ",
    "named": false
  },
  {
    "type": "∀",
    "named": false
  }
]